generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model ProjectSession {
  id           String    @id @default(cuid())
  sessionToken String?   @unique
  userId       String
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  date         DateTime? @db.Timestamp(0)
  projectId    String?
  project      Project?  @relation(fields: [projectId], references: [id])
  expires      DateTime? @db.Timestamp(0)
}

model User {
  id            String           @id @default(cuid())
  name          String?
  email         String?          @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      ProjectSession[]
  clients       Client[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Client {
  id        String    @id @default(cuid())
  nom       String
  email     String
  telephone String
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  projects  Project[]
}

model Project {
  id          String           @id @default(cuid())
  nom         String
  description String
  clientId    String
  client      Client           @relation(fields: [clientId], references: [id], onDelete: Cascade)
  sessions    ProjectSession[]
}
